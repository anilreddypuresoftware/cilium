# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-medium-arm64:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: test for arm64
          command: 
            make -C examples/kubernetes/connectivity-check fmt
            make -C examples/kubernetes/connectivity-check all
            test -z "$(git status --porcelain)" || (echo "please run 'make -C examples/kubernetes/connectivity-check fmt all' and submit your changes"; exit 1)
            sudo sh -c "echo '{ \"cgroup-parent\": \"/actions_job\", \"ipv6\": true, \"fixed-cidr-v6\": \"2001:db8:1::/64\" }' > /etc/docker/daemon.json"
            sudo cat /etc/docker/daemon.json
            sudo ip -6 route add 2001:db8:1::/64 dev docker0
            sudo sysctl net.ipv6.conf.default.forwarding=1
            sudo sysctl net.ipv6.conf.all.forwarding=1
            sudo systemctl restart docker
            helm upgrade -i cilium ./install/kubernetes/cilium \
            --namespace kube-system \
            --set nodeinit.enabled=true \
            --set kubeProxyReplacement=strict \
            --set ipam.mode=kubernetes \
            --set image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/cilium-ci \
            --set image.tag=${{ steps.vars.outputs.tag }} \
            --set image.pullPolicy=IfNotPresent \
            --set image.useDigest=false \
            --set hubble.relay.enabled=true \
            --set hubble.relay.image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/hubble-relay-ci \
            --set hubble.relay.image.tag=${{ steps.vars.outputs.tag }} \
            --set hubble.relay.image.pullPolicy=IfNotPresent \
            --set hubble.relay.image.useDigest=false \
            --set operator.image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/operator \
            --set operator.image.suffix=-ci \
            --set operator.image.tag=${{ steps.vars.outputs.tag }} \
            --set operator.image.pullPolicy=IfNotPresent \
            --set operator.image.useDigest=false \
            --set ipv6.enabled=true \
            --set ipv4.enabled=false \
            --set tunnel=disabled \
            --set autoDirectNodeRoutes=true \
            --set ipv6NativeRoutingCIDR=2001:db8:1::/64 \
            --set ingressController.enabled=true
            kubectl wait -n kube-system --for=condition=Ready --all pod --timeout=${{ env.TIMEOUT }}
            # To make sure that cilium CRD is available (default timeout is 5m)
            kubectl wait --for condition=Established crd/ciliumnetworkpolicies.cilium.io --timeout=5m
            kubectl port-forward -n kube-system deployment/hubble-relay 4245:4245 &
            kubectl apply -f ${{ env.CONFORMANCE_TEMPLATE }}
            kubectl wait --for=condition=Available --all deployment --timeout=${{ env.TIMEOUT }}

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-medium-arm64:
    jobs:
      - say-hello
